// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Category {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  typeId      String        @unique @db.ObjectId
  description String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  type        Type          @relation("fk_category_type", fields: [typeId], references: [id])
  subCategory SubCategory[] @relation("fk_sub_category_category")
  transaction Transaction?  @relation("fk_transaction_category")
}

model Type {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  description String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  category    Category?    @relation("fk_category_type")
  transaction Transaction? @relation("fk_transaction_type")
  Account     Account?     @relation("fk_account_type")
}

model SubCategory {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  categoryId  String       @db.ObjectId
  description String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  category    Category     @relation("fk_sub_category_category", fields: [categoryId], references: [id])
  transaction Transaction? @relation("fk_transaction_sub_category")
}

model Account {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  typeId         String       @unique @db.ObjectId
  description    String
  initialBalance Float
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  type           Type         @relation("fk_account_type", fields: [typeId], references: [id])
  transaction    Transaction? @relation("fk_transaction_account")
}

model Transaction {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  typeId        String      @unique @db.ObjectId
  categoryId    String      @unique @db.ObjectId
  subCategoryId String      @unique @db.ObjectId
  accountId     String      @unique @db.ObjectId
  description   String
  status        String
  value         Float
  date          DateTime
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  type          Type        @relation("fk_transaction_type", fields: [typeId], references: [id])
  category      Category    @relation("fk_transaction_category", fields: [categoryId], references: [id])
  subCategory   SubCategory @relation("fk_transaction_sub_category", fields: [subCategoryId], references: [id])
  account       Account     @relation("fk_transaction_account", fields: [accountId], references: [id])
}
